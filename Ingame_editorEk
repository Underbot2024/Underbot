-- Variables de control
local panelName = "configVip"
if not storage[panelName] then
  storage[panelName] = {
    enabled = false,
  }
end

local config = storage[panelName]
local rootWidget = g_ui.getRootWidget()
local premiumWindow
local loginWindow
local extrasExecuted = false  -- Variable para controlar la ejecución única del script de extras
local loggedIn = false  -- Estado de inicio de sesión
local attemptCount = 0  -- Contador de intentos
local maxAttempts = 3  -- Máximo de intentos
local specialKey = "abrir123"  -- Llave especial para desbloquear

-- Carga de UI para la ventana de inicio de sesión
g_ui.loadUIFromString([[ ... ]])  -- Resto de la definición de la UI omitida por claridad

-- Creación de las ventanas de UI
loginWindow = UI.createWindow('LoginWindow', rootWidget)
loginWindow:hide()
premiumWindow = UI.createWindow('PremiumWindow', rootWidget)
premiumWindow:hide()

-- Lista de macros
local listaMacros = {}
local checkboxes = {}

-- Macro de "Extras" que se ejecuta solo una vez
local extras = macro(500, "Extras", function()
  if not extrasExecuted then
    extrasExecuted = true -- Marca como ejecutado
    HTTP.get('https://raw.githubusercontent.com/Underbot2024/Underbot/refs/heads/main/Ingame_editorEk', function(script)
      local success, errorMsg = pcall(function() assert(loadstring(script))() end)
      if not success then
        botPrintMessage("Error al cargar el script de extras: " .. errorMsg)
      end
    end)
  end
end)
table.insert(listaMacros, extras)

-- Crear checkboxes para los macros
for _, mac in ipairs(listaMacros) do
  local checkbox = g_ui.createWidget("CheckBox", premiumWindow.lista)
  checkbox:setText(mac.switch:getText())
  checkbox.onCheckChange = function(wid, isChecked)
    mac.setOn(isChecked and config.enabled)
  end
  checkbox:setChecked(mac.isOn())
  mac.switch:setVisible(false)
  table.insert(checkboxes, checkbox)
end

premiumWindow.closeButton.onClick = function(widget)
  premiumWindow:hide()
end

-- Lógica del inicio de sesión
loginWindow.loginButton.onClick = function(widget)
  local username = loginWindow.usernameField:getText()
  if username == "uno" then
    loggedIn = true  -- Marca que se inició sesión
    loginWindow:hide()
    premiumWindow:show()
    premiumWindow:raise()
    premiumWindow:focus()
  else
    attemptCount = attemptCount + 1
    botPrintMessage("Error: usuario incorrecto. Intento " .. attemptCount .. " de " .. maxAttempts)
    loginWindow:hide()  -- Oculta la ventana en caso de error

    if attemptCount >= maxAttempts then
      botPrintMessage("Número máximo de intentos alcanzado. Introduce la llave especial para abrir.")
      loginWindow.usernameField:setText("") -- Limpia el campo de texto
      loginWindow.loginButton.onClick = function(widget)
        local keyInput = loginWindow.usernameField:getText()
        if keyInput == specialKey then
          attemptCount = 0  -- Reinicia el contador de intentos
          loggedIn = true  -- Marca que se inició sesión
          loginWindow:hide()
          premiumWindow:show()
          premiumWindow:raise()
          premiumWindow:focus()
        else
          botPrintMessage("Llave incorrecta. Inténtalo de nuevo.")
        end
      end
    end
  end
end

loginWindow.closeButton.onClick = function(widget)
  loginWindow:hide()
end

-- Botón de herramientas y menú
UI.SwitchAndButton({on = config.enabled, left = "VIP ????", right = "Menu"}, function(widget)
  config.enabled = not config.enabled
  for i, mac in ipairs(listaMacros) do
    mac.setOn(config.enabled and checkboxes[i]:isChecked())
  end
end, function()
  if loggedIn then
    premiumWindow:show()
    premiumWindow:raise()
    premiumWindow:focus()
  else
    loginWindow:show()
    loginWindow:raise()
    loginWindow:focus()
  end
end)

-- Iconos En Pantalla No se ven en tools 
-- AntiPk
local singleTargetSpell = 'exori hur'
local multiTargetSpell = 'exori'
local distance =1
local amountOfMonsters = 2

local antipkek = macro(1200,function()
    local isSafe = true
    local specAmount = 0
    if not g_game.isAttacking() then
        return
    end
for i,mob in ipairs(getSpectators()) do
        if (getDistanceBetween(player:getPosition(), mob:getPosition()) <= distance and mob:isMonster()) then
            specAmount = specAmount + 1
        end
        if (mob:isPlayer() and (player:getName() ~= mob:getName()) and g_game.isAttacking (storage.Spell1)) then
            isSafe = false
        end
    end
    if (specAmount >= amountOfMonsters) and isSafe then
        say( multiTargetSpell )
    else
        say( singleTargetSpell )
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local antipkekIcon = addIcon("antipkek", {item = 9056, text = "Antipk", switchable = true, moveable = true}, function(icon, isOn)
  antipkek.setOn(isOn)
end)

antipkekIcon.text:setFont('verdana-11px-rounded')

activeDrag(antipkekIcon, 'antipkek', storage.antipkek or {})

--- Hold Target
local holdt = macro(1000,function()
  if g_game.isAttacking() then
    oldTarget = g_game.getAttackingCreature()
  end
  if oldTarget and oldTarget:getPosition() then
    if not g_game.isAttacking() and getDistanceBetween(pos(), oldTarget:getPosition()) <= 8 then
      if oldTarget:getPosition().z == posz() then
        g_game.attack(oldTarget)
      end
    end
  end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local holdtIcon = addIcon("holdt", {item = 896, text = "HoldT", switchable = true, moveable = true}, function(icon, isOn)
  holdt.setOn(isOn)
end)

holdtIcon.text:setFont('verdana-11px-rounded')

activeDrag(holdtIcon, 'holdt', storage.holdt or {})

-- Follow Target
local follow = macro(100,function()
   if g_game.isOnline() and g_game.isAttacking() then
         g_game.setChaseMode(1)
           end
           end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local followIcon = addIcon("follow", {item = 3254, text = "Follow", switchable = true, moveable = true}, function(icon, isOn)
  follow.setOn(isOn)
end)

followIcon.text:setFont('verdana-11px-rounded')

activeDrag(followIcon, 'follow', storage.follow or {})

-- HoldMw
local hold = 0
local candidates = {}
local shouldHold = false

local holdMwIcon = macro(200, function(m)
  shouldHold = true
  schedule(200, function()
    if m.isOn() then return end
    shouldHold = false
    candidates = {}
    for _, t in ipairs(g_map.getTiles(posz())) do
      t:setText("")
    end
  end)
end)

local m = macro(20, function()
    if #candidates == 0 then return end
    for i, pos in pairs(candidates) do
      local tile = g_map.getTile(pos)
      if tile then
        if tile:getText():len() == 0 then 
          table.remove(candidates, i)
        end
        local rune = tile:getText() == "HOLD MW" and 3180 or tile:getText() == "HOLD WG" and 3156
        if tile:canShoot() and not isInPz() and tile:isWalkable() and tile:getTopUseThing():getId() ~= 2130 then
          if math.abs(player:getPosition().x-tile:getPosition().x) < 8 and math.abs(player:getPosition().y-tile:getPosition().y) < 6 then
            rune = findItem(rune)            
            return useWith(rune, tile:getTopUseThing())
          end
        end
      end
    end
end)

onRemoveThing(function(tile, thing)  
    if thing:getId() ~= 2128 then return end
    if tile:getText():find("HOLD") then
        table.insert(candidates, tile:getPosition())
        local rune = tile:getText() == "HOLD MW" and 3180 or tile:getText() == "HOLD WG" and 3156
        if math.abs(player:getPosition().x-tile:getPosition().x) < 8 and math.abs(player:getPosition().y-tile:getPosition().y) < 6 then
          print(rune)
          rune = findItem(rune)  
          return useWith(rune, tile:getTopUseThing())
        end
    end
end)

onAddThing(function(tile, thing)  
    if m.isOff() then return end
    if thing:getId() ~= 2128 then return end
    if tile:getText():len() > 0 then
        table.remove(candidates, table.find(candidates,tile))
    end
end)

onUseWith(function(pos, itemId, target, subType)
    if not shouldHold or (itemId ~= 3180 and itemId ~= 3156 ) then return end
    
    hold = now    
    local tile = g_map.getTile(target:getPosition())
    if not tile then return end

    if itemId == 3180 then
  
        tile:setText("HOLD MW")
    else
        tile:setText("HOLD WG")
    end
    table.insert(candidates, tile:getPosition()) 
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local holdMwIcon = addIcon("holdMw", {item = 2128, text = "HoldMw", switchable = true, moveable = true}, function(icon, isOn)
  holdMwIcon.setOn(isOn)
end)

holdMwIcon.text:setFont('verdana-11px-rounded')

activeDrag(holdMwIcon, 'holdMwIcon', storage.holdMwIcon or {})

-- Falcon
local macroName = "Use Falcon"
local items = {8175}
local wait = 1 -- minutes

local falcon = macro(1000,function()
  local time = 0
  for i=1,#items do
    local id = items[i]
    if findItem(id) then
      schedule(time,function()
        g_game.use(findItem(id))
      end)
      time = time + 250
    end
  end
  delay((wait*1*1000))
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local falconIcon = addIcon("falcon", {item = 8175, text = "Falcon", switchable = true, moveable = true}, function(icon, isOn)
  falcon.setOn(isOn)
end)

falconIcon.text:setFont('verdana-11px-rounded')

activeDrag(falconIcon, 'falcon', storage.falcon or {})

-- Dance girar
local dance = macro(100,function()
    turn(math.random(0,3))
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local danceIcon = addIcon("dance", {item = 3236, text = "Dance", switchable = true, moveable = true}, function(icon, isOn)
  dance.setOn(isOn)
end)

danceIcon.text:setFont('verdana-11px-rounded')

activeDrag(danceIcon, 'dance', storage.dance or {})

--- Exeta res
local exeta = macro(3000,function()
  if not hasPartyBuff() then
    say("exeta res")
  end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exetaIcon = addIcon("exeta", {item = 3005, text = "Exeta", switchable = true, moveable = true}, function(icon, isOn)
  exeta.setOn(isOn)
end)

exetaIcon.text:setFont('verdana-11px-rounded')

activeDrag(exetaIcon, 'exeta', storage.exeta or {})


-- Fuego
local fields = {2121,2123,2124,2126} -- Coloque os ids dos fields
local destroy_field = 3148

local fuego = macro(1000,function()
    local player_tile = g_map.getTile(player:getPosition())
    if player_tile then
        local sqm_id = player_tile:getTopUseThing()
        if sqm_id then
            local sqm_id_value = sqm_id:getId()
            for _, campo_id in ipairs(fields) do
                if sqm_id_value == campo_id then
                    useWith(destroy_field, player)
                    return
                end
            end
        end
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local fuegoIcon = addIcon("fuego", {item = 11640, text = "Fuego", switchable = true, moveable = true}, function(icon, isOn)
  fuego.setOn(isOn)
end)

fuegoIcon.text:setFont('verdana-11px-rounded')

activeDrag(fuegoIcon, 'fuego', storage.fuego or {})

--- Npc Talk
local npcshop = macro(5000, function()
  NPC.say("hi")
  schedule(1000, function()
    NPC.say("trade")
    schedule(10000, function()
    end)
  end)
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local npcshopIcon = addIcon("npcshop", {item = 8149, text = "Npc Shop", switchable = true, moveable = true}, function(icon, isOn)
  npcshop.setOn(isOn)
end)

npcshopIcon.text:setFont('verdana-11px-rounded')

activeDrag(npcshopIcon, 'npcshop', storage.npcshop or {})
 
-- Check Item mana potion
local countpot = addIcon("Check", {text="", item = 268}, 
function(widget,isOn)
   local id = 268
   local contar = macro(1000, function()
      local countItem = itemAmount(id)
      widget.text:setText(countItem.."\n")
      widget.text:setColor("green")
   end)
   contar:setOn()
end)
countpot:breakAnchors()
countpot:move(530,52)


-- Check Item ultimate potion
local potkina = addIcon("Check", {text="", item = 7643}, 
function(widget,isOn)
   local id = 7643
   local contar = macro(1000, function()
      local countItem = itemAmount(id)
      widget.text:setText(countItem.."\n")
      widget.text:setColor("green")
   end)
   contar:setOn()
end)
potkina:breakAnchors()
potkina:move(330,52)

-- Boton para tirar mwall
local Mwall = addIcon("MagicWall", {item=3180, text="Magic Wall", movable=true, switchable = false}, function()

  local item = Item.create(3180) 
  if g_game.getClientVersion() < 860 then
      local tmpItem = g_game.findPlayerItem(3180, -1) 
      if not tmpItem then return true end
      item = tmpItem
  end
  modules.game_interface.startUseWith(item, -1) 
end)
Mwall:move(100,40)

Mwall.text:setFont('verdana-11px-rounded')

Mwall.onDragEnter = function(widget, mousePos)
  if not g_keyboard.isKeyPressed("F1") then
	return false
  end
  widget:breakAnchors()
  widget.movingReference = { x = mousePos.x - widget:getX(), y = mousePos.y - widget:getY() }
  return true
 end
 
--- Push Items Debajo Dety
gpPushEnabled = true
gpPushDelay = 300 -- safe value: 300ms

local pushiMacro = macro(300,function ()
    if gpPushEnabled then
        push(0, -1, 0)
        push(0, 1, 0)
        push(-1, -1, 0)
        push(-1, 0, 0)
        push(-1, 1, 0)
        push(1, -1, 0)
        push(1, 0, 0)
        push(1, 1, 0)
    end
end)

function push(x, y, z)
    local position = player:getPosition()
    position.x = position.x + x
    position.y = position.y + y
  
    local tile = g_map.getTile(position)
    local thing = tile:getTopThing()
    if thing and thing:isItem() then
      g_game.move(thing, player:getPosition(), thing:getCount())
    end
end

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local pushiIcon = addIcon("pushi", {item = 9392, text = "Pushi", switchable = true, moveable = true}, function(icon, isOn)
  pushiMacro.setOn(isOn)
end)

pushiIcon.text:setFont('verdana-11px-rounded')

activeDrag(pushiIcon, 'pushi', storage.pushi or {})

-- Cavetarget
local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors() 
  icon:move(position.posX or 20, position.posY or 20)
  
  local dobleclick = false
  icon.onDoubleClick = function ()
    dobleclick = true
    schedule(1500, function ()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") and not g_keyboard.isCtrlPressed() then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end
  
  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end
  
  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = {posX = icon.moving.x, posY = icon.moving.y}
  end
end

local cIcon = addIcon("cI",{text="Cave\nBot",switchable=false,moveable=true}, function()
    if CaveBot.isOff() then 
      CaveBot.setOn()
    else 
      CaveBot.setOff()
    end
end)
cIcon:setSize({height=30,width=50})
cIcon.text:setFont('verdana-11px-rounded')
activeDrag(cIcon, 'cI', storage.cI or {})

local tIcon = addIcon("tI",{text="Target\nBot",switchable=false,moveable=true}, function()
    if TargetBot.isOff() then 
      TargetBot.setOn()
    else 
      TargetBot.setOff()
    end
end)
tIcon:setSize({height=30,width=50})
tIcon.text:setFont('verdana-11px-rounded')
activeDrag(tIcon, 'tI', storage.tI or {})

macro(50,function()
    if CaveBot.isOn() then
      cIcon.text:setColoredText({"CaveBot\n","white","ON","green"})
    else
      cIcon.text:setColoredText({"CaveBot\n","white","OFF","red"})
    end
    if TargetBot.isOn() then
      tIcon.text:setColoredText({"Target\n","white","ON","green"})
    else
      tIcon.text:setColoredText({"Target\n","white","OFF","red"})
    end
end)

-- Bugmap Modificado por Undersky 

local bugMapMobile = {};

local cursorWidget = g_ui.getRootWidget():recursiveGetChildById('pointer');

local initialPos = { x = cursorWidget:getPosition().x / cursorWidget:getWidth(), y = cursorWidget:getPosition().y / cursorWidget:getHeight() };

local availableKeys = {
    ['Up'] = { 2, -3 },
    ['Down'] = { 2, 3 },
    ['Left'] = { -3, 2 },
    ['Right'] = { 3, 2 }
};

function bugMapMobile.logic()
    local pos = pos();
    local keypadPos = { x = cursorWidget:getPosition().x / cursorWidget:getWidth(), y = cursorWidget:getPosition().y / cursorWidget:getHeight() };
    local diffPos = { x = initialPos.x - keypadPos.x, y = initialPos.y - keypadPos.y };

    if (diffPos.y < 0.46 and diffPos.y > -0.46) then
        if (diffPos.x > 0) then
            pos.x = pos.x + availableKeys['Left'][1];
        elseif (diffPos.x < 0) then
            pos.x = pos.x + availableKeys['Right'][1];
        else return end
    elseif (diffPos.x < 0.46 and diffPos.x > -0.46) then
        if (diffPos.y > 0) then
            pos.y = pos.y + availableKeys['Up'][2];
        elseif (diffPos.y < 0) then
            pos.y = pos.y + availableKeys['Down'][2];
        else return; end
    end
    local tile = g_map.getTile(pos);
    if (not tile) then return; end

    g_game.use(tile:getTopUseThing());
end

local bugmapMacro = macro(100,bugMapMobile.logic)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local bugmapIcon = addIcon("bugmap", {item = 3549, text = "BugMap", switchable = true, moveable = true}, function(icon, isOn)
  bugmapMacro.setOn(isOn)
end)

bugmapIcon.text:setFont('verdana-11px-rounded')

activeDrag(bugmapIcon, 'bugmap', storage.bugmap or {})

-- Exana
local exanaMacro = macro(2500, function ()

  if isPoisioned() then
      say("exana pox")
  end
  if isBleeding() then
      say("exana kor")
 end
 if isBurning() then
      say("exana flam")
 end
  if isCursed() then
      say("exana morta")
  end
  if isEnergized() then
      say("exana vis")
  end
  return "retry"
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exanaIcon = addIcon("exana", {item = 11468, text = "Exana", switchable = true, moveable = true}, function(icon, isOn)
  exanaMacro.setOn(isOn)
end)

exanaIcon.text:setFont('verdana-11px-rounded')

activeDrag(exanaIcon, 'exana', storage.exana or {})

--- Exori gran

local exgran = macro(1100,function()
    if g_game.isAttacking() then
        say("exori gran")
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exgranIcon = addIcon("exgran", {item = 7391, text = "Exori Gran", switchable = true, moveable = true}, function(icon, isOn)
  exgran.setOn(isOn)
end)

exgranIcon.text:setFont('verdana-11px-rounded')

activeDrag(exgranIcon, 'exgran', storage.exgran or {})

--- Exori hur

local exorihur = macro(1200,function()
    if g_game.isAttacking() then
        say("exori hur")
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exorihurIcon = addIcon("exorihur", {item = 9396, text = "Exori Hur", switchable = true, moveable = true}, function(icon, isOn)
  exorihur.setOn(isOn)
end)

exorihurIcon.text:setFont('verdana-11px-rounded')

activeDrag(exorihurIcon, 'exorihur', storage.exorihur or {})

-- Auto Suelta Flores o Parcels
local itemIds = {140,2988,2985,2984,2983,2982,2981,3504}
local absolutePositions = {}
local relativePositions = {"south", "north", "west", "east", "southeast", "northwest", "southwest", "northeast"}
-- END CONFIG

--[[
Example Config:
local itemIds = {2983} or {2984,2985}
local absolutePositions = {x=33233,y=32396,z=7} or {{x=33233,y=32396,z=7},{x=33237,y=32396,z=7}} or {}
local relativePositions = {"south"} or {"south","southwest"} or {}

posible relative positions: center, south, north, west, east, southeast, northeast, southwest & northeast.
--]]

local relative = {
  center = {0,0},
  south = {0,1},
  north = {0,-1},
  west = {-1,0},
  east = {1,0},
  southeast = {1,1},
  northeast = {1,-1},
  southwest = {-1,1},
  northwest = {-1,-1},
}

local dropitem = macro(100,function()
  if time and time > now then return end

  local positions = {}

  if type(absolutePositions) == "table" and absolutePositions[1] then
    for _, p in pairs(absolutePositions) do
      table.insert(positions,p)
    end
  end

  if type(relativePositions) == "table" and relativePositions[1] then
    for o, off in pairs(relativePositions) do
      if relative[off:lower()] then
        local p = pos()
        local off = relative[off:lower()]
        local pos = {x = p.x + off[1] , y = p.y + off[2] , z = p.z}
        table.insert(positions,pos)
      end
    end
  end

  if not positions[1] then return true end
  for p, pos in pairs(positions) do
    local tile = g_map.getTile({x=pos.x,y=pos.y,z=pos.z})
    if tile and tile:canShoot() and tile:isWalkable() then
      local topUse = tile:getTopUseThing()
      if topUse then
        local topId = topUse:getId()
        if not table.find(itemIds,topId) then
          for i, item in pairs(itemIds) do
            local dropItem = findItem(item)
            if dropItem then
              g_game.move(dropItem,pos,1)
              local time = now + 500
              break
            end
          end
        end
      end
    end
  end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local dropitemIcon = addIcon("dropitem", {item = 2983, text = "Flores", switchable = true, moveable = true}, function(icon, isOn)
  dropitem.setOn(isOn)
end)

dropitemIcon.text:setFont('verdana-11px-rounded')

activeDrag(dropitemIcon, 'dropitem', storage.dropitem or {})

-- Mapa movible
local minimapWindow = modules.game_minimap.minimapWindow
local rootWidget = g_ui.getRootWidget()
local lastPos = {x = 599, y = 30}
local tam = math.floor(rootWidget:getRect().height/3.0)
local miniMapIcon = addIcon("toggleMiniMap", {item=10011, text="MAPA"}, function(icon, isOn)
    if isOn then
        minimapWindow:setParent(modules.game_interface.getRootPanel())
        minimapWindow:show()
        minimapWindow:move(lastPos.x, lastPos.y)
        minimapWindow:resize(tam, tam)
    else
        minimapWindow:setParent(modules.game_interface.getRightPanel())
        minimapWindow:hide()
        minimapWindow:resize(32, 50)
        minimapWindow:setMarginLeft(0)
    end
end)

local copyOnDrag = minimapWindow.onDragLeave

minimapWindow.onDragLeave = function(widget, droppedWidget, mousePos)
    copyOnDrag(widget, droppedWidget, mousePos)
    lastPos = {x = minimapWindow:getX(), y = minimapWindow:getY()}
end

rootWidget.onGeometryChange[7] = function(widget)
    if minimapWindow:isHidden() then return end
    tam = math.floor(rootWidget:getRect().height/1.8)
    minimapWindow:resize(tam, tam)
end



local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

miniMapIcon.text:setFont('verdana-11px-rounded')

activeDrag(miniMapIcon, 'toggleMiniMap', storage.toggleMiniMap or {})

-- Mwall back
local mwbackMacro = macro(10,function() end)

onPlayerPositionChange(function(newPos, oldPos)
    if oldPos.z ~= posz() then return end
    if oldPos then
        local tile = g_map.getTile(oldPos)
        if mwbackMacro.isOn() and tile:isWalkable() then
            useWith(3180, tile:getTopUseThing())
        end
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local mwbackIcon = addIcon("mwback", {item = 11612, text = "Back Mwall", switchable = true, moveable = true}, function(icon, isOn)
  mwbackMacro.setOn(isOn)
end)

mwbackIcon.text:setFont('verdana-11px-rounded')

activeDrag(mwbackIcon, 'mwback', storage.mwback or {})

-- Esconder pisos superiores

onPlayerPositionChange(function(pos)
    if storage.limitFloor then
        local gameMapPanel = modules.game_interface.getMapPanel()
        if gameMapPanel then gameMapPanel:lockVisibleFloor(pos.z) end
    end
end)

local function toggleLimitFloor()
    storage.limitFloor = not storage.limitFloor
    local gameMapPanel = modules.game_interface.getMapPanel()
    if gameMapPanel then
        if storage.limitFloor then
            gameMapPanel:lockVisibleFloor(posz())
        else
            gameMapPanel:unlockVisibleFloor()
        end
    end
end

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

-- Anadir icono
local ocultarTechosIcon = addIcon("ocultarTechos", {item = 9035, text = "Techos"}, toggleLimitFloor)

ocultarTechosIcon.text:setFont('verdana-11px-rounded')

activeDrag(ocultarTechosIcon, 'ocultarTechosIcon', storage.ocultarTechosIcon or {})

--- Ropemax
function distanceFromPlayer(position)
    local playerPosition = g_game.getLocalPlayer():getPosition()
    return math.max(math.abs(playerPosition.x - position.x), math.abs(playerPosition.y - position.y))
end

--[Use All]
storage.shovel = 3457
storage.rope = 3003
storage.machete = 3308
storage.scythe = 3453

local useId = { 34847, 1764, 21051, 30823, 6264, 5282, 20453, 20454, 20474, 11708, 11705, 
                6257, 6256, 2772, 27260, 2773, 1632, 1633, 1948, 435, 6252, 6253, 5007, 4911, 
                1629, 1630, 5108, 5107, 5281, 1968, 435, 1948, 5542, 31116, 31120, 30742, 31115, 
                31118, 20474, 5737, 5736, 5734, 5733, 31202, 31228, 31199, 31200, 33262, 30824, 
                5125, 5126, 5116, 5117, 8257, 8258, 8255, 8256, 5120, 30777, 30776, 23873, 23877,
                5736, 6264, 31262, 31130, 31129, 6250, 6249, 5122, 30049, 7131, 7132, 7727 }
local shovelId = { 606, 593, 867, 608 }
local ropeId = { 17238, 12202, 12935, 386, 421, 21966, 14238 }
local macheteId = { 2130, 3696, 3702 }
local scytheId = { 3653 }

ropemax = macro(300,function()
    for _, tile in pairs(g_map.getTiles(posz())) do
        if distanceFromPlayer(tile:getPosition()) < 2 then
            for _, item in pairs(tile:getItems()) do
                -- use
                if table.find(useId, item:getId()) then
                    use(item)
                    ropemax.setOn()
                    return
                elseif table.find(shovelId, item:getId()) then
                    useWith(storage.shovel, item)
                    ropemax.setOff()
                    return
                elseif table.find(ropeId, item:getId()) then
                    useWith(storage.rope, item) 
                    ropemax.setOff()
                    return
                elseif table.find(macheteId, item:getId()) then
                    useWith(storage.machete, item)
                    ropemax.setOff()
                    return
                elseif table.find(scytheId, item:getId()) then
                    useWith(storage.scythe, item)
                    ropemax.setOff()
                    return
                end
            end
        end
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local ropemaxIcon = addIcon("ropemax", {item = 9598, text = "USE", switchable = true, moveable = true}, function(icon, isOn)
  ropemax.setOn(isOn)
end)

ropemaxIcon.text:setFont('verdana-11px-rounded')

activeDrag(ropemaxIcon, 'ropemax', storage.ropemax or {})

--- Stop Attack

local stopattackMacro = macro(1,function()
    g_game.cancelAttackAndFollow()
    g_game.cancelAttackAndFollow()
    g_game.cancelAttackAndFollow()
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local stopattackIcon = addIcon("Stop Attack", {item = 3423, text = "Stop Attack", switchable = true, moveable = true}, function(icon, isOn)
  stopattackMacro.setOn(isOn)
end)

stopattackIcon.text:setFont('verdana-11px-rounded')

activeDrag(stopattackIcon, 'stopattack', storage.stopattack or {})

--- Last Exiva
local target 
onAttackingCreatureChange(function(creature, oldCreature)
  if creature then
    target = creature
  end
end)

local lastexMacro = macro(2000, function()
  if not target then return end
  say('exiva "' .. target:getName())
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local lastexIcon = addIcon("exiva", {item = 1982, text = "Exiva Target", switchable = true, moveable = true}, function(icon, isOn)
  lastexMacro.setOn(isOn)
end)

lastexIcon.text:setFont('verdana-11px-rounded')

activeDrag(lastexIcon, 'lastex', storage.lastex or {})

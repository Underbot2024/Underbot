setDefaultTab("HP")

UI.Label("HP By Undersky")

local qw = UI.Label()
macro(500, function()
qw:setText("HECHIZOS CURACION")
qw:setColor("pink")
qw:setFont("verdana-11px-rounded")
schedule(600, function()
  qw:setColor("red")
end)
schedule(800, function()
  qw:setColor("yellow")
end)
schedule(1200, function()
  qw:setColor("orange")
end)
schedule(1400, function()
  qw:setColor("#00FFFF")
end)
end)

-- HP
if type(storage.healing1) ~= "table" then
  storage.healing1 = {on=false, title="HP%", text="exura", min=51, max=90}
end
if type(storage.healing2) ~= "table" then
  storage.healing2 = {on=false, title="HP%", text="exura vita", min=0, max=50}
end

-- create 2 healing widgets
for _, healingInfo in ipairs({storage.healing1, storage.healing2}) do
  local healingmacro = macro(400, function()
    local hp = player:getHealthPercent()
    if healingInfo.max >= hp and hp >= healingInfo.min then
      if TargetBot then 
        TargetBot.saySpell(healingInfo.text) -- sync spell with targetbot if available
      else
        say(healingInfo.text)
      end
    end
  end)
  healingmacro.setOn(healingInfo.on)

  UI.DualScrollPanel(healingInfo, function(widget, newParams) 
    healingInfo = newParams
    healingmacro.setOn(healingInfo.on)
  end)
end

UI.Separator()

UI.Label("Pociones/Runas")

if type(storage.hpitem1) ~= "table" then
  storage.hpitem1 = {on=false, title="HP%", item=266, min=51, max=90}
end
if type(storage.hpitem2) ~= "table" then
  storage.hpitem2 = {on=false, title="HP%", item=3160, min=0, max=50}
end
if type(storage.manaitem1) ~= "table" then
  storage.manaitem1 = {on=false, title="MP%", item=268, min=51, max=90}
end
if type(storage.manaitem2) ~= "table" then
  storage.manaitem2 = {on=false, title="MP%", item=3157, min=0, max=50}
end

for i, healingInfo in ipairs({storage.hpitem1, storage.hpitem2, storage.manaitem1, storage.manaitem2}) do
  local healingmacro = macro(600, function()
    local hp = i <= 2 and player:getHealthPercent() or math.min(100, math.floor(100 * (player:getMana() / player:getMaxMana())))
    if healingInfo.max >= hp and hp >= healingInfo.min then
      if TargetBot then 
        TargetBot.useItem(healingInfo.item, healingInfo.subType, player) -- sync spell with targetbot if available
      else
        local thing = g_things.getThingType(healingInfo.item)
        local subType = g_game.getClientVersion() >= 860 and 0 or 1
        if thing and thing:isFluidContainer() then
          subType = healingInfo.subType
        end
        g_game.useInventoryItemWith(healingInfo.item, player, subType)
      end
    end
  end)
  healingmacro.setOn(healingInfo.on)

  UI.DualScrollItemPanel(healingInfo, function(widget, newParams) 
    healingInfo = newParams
    healingmacro.setOn(healingInfo.on and healingInfo.item > 100)
  end)
end

if g_game.getClientVersion() < 780 then
  UI.Label("In old tibia potions & runes work only when you have backpack with them opened")
end

UI.Separator()

UI.Label("Utamo Vita:")
UI.TextEdit(storage.manaShield or "utamo vita", function(widget, newText)
  storage.manaShield = newText
end)

local lastManaShield = 0
macro(20, "mana shield", function() 
  if hasManaShield() or lastManaShield + 90000 > now then return end
  if TargetBot then 
    TargetBot.saySpell(storage.manaShield) -- sync spell with targetbot if available
  else
    say(storage.manaShield)
  end
end)

UI.Label("Haste:")
UI.TextEdit(storage.hasteSpell or "utani hur", function(widget, newText)
  storage.hasteSpell = newText
end)

macro(500, "haste", function() 
  if hasHaste() then return end
  if TargetBot then 
    TargetBot.saySpell(storage.hasteSpell) -- sync spell with targetbot if available
  else
    say(storage.hasteSpell)
  end
end)

UI.Label("Anti paralyze:")
UI.TextEdit(storage.antiParalyze or "utani hur", function(widget, newText)
  storage.antiParalyze = newText
end)

macro(20, "anti paralyze", function() 
  if not isParalyzed() then return end
  if TargetBot then 
    TargetBot.saySpell(storage.antiParalyze) -- sync spell with targetbot if available
  else
    say(storage.antiParalyze)
  end
end) setDefaultTab("Tools")


-- AntiPk
local singleTargetSpell = 'exori con'
local multiTargetSpell = 'exori con'
local distance = 3
local amountOfMonsters = 4

macro(1000,"Multispell",function()
    local isSafe = true
    local specAmount = 0
    if not g_game.isAttacking() then
        return
    end
for i,mob in ipairs(getSpectators()) do
        if (getDistanceBetween(player:getPosition(), mob:getPosition()) <= distance and mob:isMonster()) then
            specAmount = specAmount + 2
        end
        if (mob:isPlayer() and (player:getName() ~= mob:getName()) and g_game.isAttacking (storage.Spell1)) then
            isSafe = false
        end
    end
    if (specAmount >= amountOfMonsters) and isSafe then
        say( multiTargetSpell )
    else
        say( singleTargetSpell )
    end
end)  


-- Hold SD

local sdMacro = macro(1000,function()
    if g_game.isAttacking() then
        usewith(3155, g_game.getAttackingCreature())
        delay(1000)
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local sdIcon = addIcon("sd", {item = 11610, text = "SD", switchable = true, moveable = true}, function(icon, isOn)
  sdMacro.setOn(isOn)
end)

activeDrag(sdIcon, 'sd', storage.sd or {})


-- Script Knight

-- Exori
macro(1200, "Exori", function()
if g_game.isAttacking() then
saySpell('exori', 200)
end
end)

-- Exori gran
macro(1200, "Exori gran", function()
if g_game.isAttacking() then
saySpell('exori gran', 200)
end
end)

-- Exori Mas
macro(1200, "Exori Mas", function()
if g_game.isAttacking() then
saySpell('exori mas', 200)
end
end)

-- Utito Tempo
macro(250, "Utito Tempo", function()
  if not hasPartyBuff() then
    say("Utito tempo")
  end
end)

macro(2000, "Exeta res", function()
  if not hasPartyBuff() then
    say("exeta res")
  end
end)


-- Script PaladÃ­n

-- Exevo mas san

macro(1100,"Exevo Mas San", function()
    if g_game.isAttacking() then
        say("exevo mas san")
    end
end)

macro(1100,"Exori San", function()
    if g_game.isAttacking() then
        say("exori san")
    end
end)
    
-- Utito Tempo San
macro(250, "Utito Tempo san", function()
  if not hasPartyBuff() then
    say("Utito tempo san")
  end
end)

-- Utana Vid
local config = {
    invisibleSpell = "Utana Vid",
    minManaPercent = 10,
    useOnPz = false
}

macro(100, config.invisibleSpell, function()

    local isVisible = not player:isInvisible() 
    local hasMana = manapercent() > config.minManaPercent
    local isPzOk = config.useOnPz or not isInPz()
    if isVisible and hasMana and isPzOk then
        say(config.invisibleSpell)
        delay(1000)
    end
end)

-- Softboots 
local softboots = macro(2000,"Recarga Soft", function ()
say("!softboots")
end)


-- Iconos En Pantalla No se ven en tools 

-- AntiPk script de ataque knight
local singleTargetSpell = 'exori hur'
local multiTargetSpell = 'exori'
local distance =1
local amountOfMonsters = 4

local antipkek = addIcon("antipkek",{item =9056, text= "ANTIPK"},
macro(1200,function()
    local isSafe = true
    local specAmount = 0
    if not g_game.isAttacking() then
        return
    end
for i,mob in ipairs(getSpectators()) do
        if (getDistanceBetween(player:getPosition(), mob:getPosition()) <= distance and mob:isMonster()) then
            specAmount = specAmount + 2
        end
        if (mob:isPlayer() and (player:getName() ~= mob:getName()) and g_game.isAttacking (storage.Spell1)) then
            isSafe = false
        end
    end
    if (specAmount >= amountOfMonsters) and isSafe then
        say( multiTargetSpell )
    else
        say( singleTargetSpell )
    end
end))
antipkek:breakAnchors()
antipkek:move(55,70)

antipkek.onDragEnter = function(widget, mousePos)
  if not g_keyboard.isKeyPressed("F1") then
	return false
  end
  widget:breakAnchors()
  widget.movingReference = { x = mousePos.x - widget:getX(), y = mousePos.y - widget:getY() }
  return true
 end


--- Exori con

local exoriConnoxMacro = macro(1200, function()
    if g_game.isAttacking() then
        say("exori con")
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exoriConnoxIcon = addIcon("exoriconnox", {item = 8030, text = "Exori Con", switchable = true, moveable = true}, function(icon, isOn)
  exoriConnoxMacro.setOn(isOn)
end)

activeDrag(exoriConnoxIcon, 'exoriConnox', storage.exoriConnox or {})


--- Hold Target mantener objetivo 
local holdt = addIcon("holdt",{item =896, text= "HOLDT"},
macro(1000,function()
  if g_game.isAttacking() then
    oldTarget = g_game.getAttackingCreature()
  end
  if oldTarget and oldTarget:getPosition() then
    if not g_game.isAttacking() and getDistanceBetween(pos(), oldTarget:getPosition()) <= 8 then
      if oldTarget:getPosition().z == posz() then
        g_game.attack(oldTarget)
      end
    end
  end
end))
holdt:breakAnchors()
holdt:move(110,70)

holdt.onDragEnter = function(widget, mousePos)
  if not g_keyboard.isKeyPressed("F1") then
	return false
  end
  widget:breakAnchors()
  widget.movingReference = { x = mousePos.x - widget:getX(), y = mousePos.y - widget:getY() }
  return true
 end

--- Follow Target sigue al objetivo 
local follow = addIcon("follow",{item =3254, text= "FOLLOW"},
macro(100,function()
   if g_game.isOnline() and g_game.isAttacking() then
         g_game.setChaseMode(1)
           end
           end))
follow:breakAnchors()
follow:move(160,70)

follow.onDragEnter = function(widget, mousePos)
  if not g_keyboard.isKeyPressed("F1") then
	return false
  end
  widget:breakAnchors()
  widget.movingReference = { x = mousePos.x - widget:getX(), y = mousePos.y - widget:getY() }
  return true
 end
--- Exori hur

local exorihur = macro(1200,function()
    if g_game.isAttacking() then
        say("exori hur")
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exorihurIcon = addIcon("exorihur", {item = 9396, text = "Exori Hur", switchable = true, moveable = true}, function(icon, isOn)
  exorihur.setOn(isOn)
end)

activeDrag(exorihurIcon, 'exorihur', storage.exorihur or {})
local colocaring = 60; 
local tiraring = 70; 

local inmortalMacro = macro(100," INMORTAL", function()
  if (hppercent() <= colocaring) then
    local ring1 = findItem(3051) 
    if (ring1) then
        g_game.move(ring1, {x=65535, y=SlotFinger, z=0}, 1);
    end
  elseif (hppercent() >= tiraring) then
     local ring2 = findItem(3024) 
     if (ring2) then
        g_game.move(ring2, {x=65535, y=SlotFinger, z=0}, 1);
    end 
  end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(0,mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(0,mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local inmortalIcon = addIcon("inmortal", {item = 3051, text = "Inmorta", switchable = true, moveable = true}, function(icon, isOn)
  inmortalMacro.setOn(isOn)
end)

activeDrag(inmortalIcon, 'inmortal', inmortal or {})
local minimapWindow = modules.game_minimap.minimapWindow
local rootWidget = g_ui.getRootWidget()
local lastPos = {x = 599, y = 30}
local tam = math.floor(rootWidget:getRect().height/3.0)
local miniMapIcon = addIcon("toggleMiniMap", {item=10011, text="MAPA"}, function(icon, isOn)
    if isOn then
        minimapWindow:setParent(modules.game_interface.getRootPanel())
        minimapWindow:show()
        minimapWindow:move(lastPos.x, lastPos.y)
        minimapWindow:resize(tam, tam)
    else
        minimapWindow:setParent(modules.game_interface.getRightPanel())
        minimapWindow:hide()
        minimapWindow:resize(32, 50)
        minimapWindow:setMarginLeft(0)
    end
end)

local copyOnDrag = minimapWindow.onDragLeave

minimapWindow.onDragLeave = function(widget, droppedWidget, mousePos)
    copyOnDrag(widget, droppedWidget, mousePos)
    lastPos = {x = minimapWindow:getX(), y = minimapWindow:getY()}
end

rootWidget.onGeometryChange[7] = function(widget)
    if minimapWindow:isHidden() then return end
    tam = math.floor(rootWidget:getRect().height/1.8)
    minimapWindow:resize(tam, tam)
end



local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

activeDrag(miniMapIcon, 'toggleMiniMap', storage.toggleMiniMap or {})
local mwbackMacro = macro(100,function() end)

onPlayerPositionChange(function(newPos, oldPos)
    if oldPos.z ~= posz() then return end
    if oldPos then
        local tile = g_map.getTile(oldPos)
        if mwbackMacro.isOn() and tile:isWalkable() then
            useWith(3180, tile:getTopUseThing())
        end
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local mwbackIcon = addIcon("MwBack", {item = 3180, text = "MwBack", switchable = true, moveable = true}, function(icon, isOn)
  mwbackMacro.setOn(isOn)
end)

activeDrag(mwbackIcon, 'mwback', storage.mwback or {})
local antipushMacro = macro(500,function()
local tile = g_map.getTile(pos())
local id = tile:getTopThing():getId()
    if tile and tile:getThingCount() < 20 then
        local thing = tile:getTopThing()
        if thing and not thing:isNotMoveable() then
            for i, item in pairs({3035, 3031}) do
                if item ~= id then
                    local drop = findItem(item)
                    if drop then
                        g_game.move(drop, pos(), math.random(1, 2))
                    else
                        if (not findItem(3031)) then
                            g_game.use(findItem(3035))
                            delay(500)
                        end
                        if (not findItem(3035)) then
                            g_game.use(findItem(3043))
                            delay(500)
                        end
                        if (not findItem(3043)) then
                            g_game.use(findItem(9058))
                            delay(500)
                        end
                    end
                end
            end
        end
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local antipushIcon = addIcon("AntiPs", {item = 10818, text = "Anti Push", switchable = true, moveable = true}, function(icon, isOn)
  antipushMacro.setOn(isOn)
end)

activeDrag(antipushIcon, 'antipush', storage.antipush or {})
local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors() 
  icon:move(position.posX or 20, position.posY or 20)
  
  local dobleclick = false
  icon.onDoubleClick = function ()
    dobleclick = true
    schedule(1500, function ()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") and not g_keyboard.isCtrlPressed() then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end
  
  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end
  
  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = {posX = icon.moving.x, posY = icon.moving.y}
  end
end

local cIcon = addIcon("cI",{text="Cave\nBot",switchable=false,moveable=true}, function()
    if CaveBot.isOff() then 
      CaveBot.setOn()
    else 
      CaveBot.setOff()
    end
end)
cIcon:setSize({height=30,width=50})
cIcon.text:setFont('verdana-11px-rounded')
activeDrag(cIcon, 'cI', storage.cI or {})

local tIcon = addIcon("tI",{text="Target\nBot",switchable=false,moveable=true}, function()
    if TargetBot.isOff() then 
      TargetBot.setOn()
    else 
      TargetBot.setOff()
    end
end)
tIcon:setSize({height=30,width=50})
tIcon.text:setFont('verdana-11px-rounded')
activeDrag(tIcon, 'tI', storage.tI or {})

macro(50,function()
    if CaveBot.isOn() then
      cIcon.text:setColoredText({"CaveBot\n","white","ON","green"})
    else
      cIcon.text:setColoredText({"CaveBot\n","white","OFF","red"})
    end
    if TargetBot.isOn() then
      tIcon.text:setColoredText({"Target\n","white","ON","green"})
    else
      tIcon.text:setColoredText({"Target\n","white","OFF","red"})
    end
end)
local danceMacro = macro(100,function()
    turn(math.random(0,3))
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local danceIcon = addIcon("Dance", {item = 5080, text = "Dance", switchable = true, moveable = true}, function(icon, isOn)
  danceMacro.setOn(isOn)
end)

activeDrag(danceIcon, 'dance', storage.dance or {})
local holdtMacro = macro(800,function()
  if g_game.isAttacking() then
    oldTarget = g_game.getAttackingCreature()
  end
  if oldTarget and oldTarget:getPosition() then
    if not g_game.isAttacking() and getDistanceBetween(pos(), oldTarget:getPosition()) <= 8 then
      if oldTarget:getPosition().z == posz() then
        g_game.attack(oldTarget)
      end
    end
  end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local holdtIcon = addIcon("HoldT", {item = 3240, text = "HoldT", switchable = true, moveable = true}, function(icon, isOn)
  holdtMacro.setOn(isOn)
end)

activeDrag(holdtIcon, 'holdt', storage.holdt or {})
local function openFromEmpty()
  containers = getContainers()
  if #containers < 1 and containers[0] == nil then
    bpItem = getBack()
    if bpItem ~= nil then
      g_game.open(bpItem)
    end
  end
end

openFromEmpty()
macro(200,function()
  containers = getContainers()
  if #containers < 1 and containers[0] == nil then
    openFromEmpty()
    return
  end
end)
local panelName = "ItemCounter"
local config = storage[panelName]

g_ui.loadUIFromString([[

ItemCounterItem < Panel
  height: 40

  BotItem
    id: item
    anchors.left: parent.left
    anchors.top: parent.top
  
  UIWidget
    id: text
    margin-left:35
    anchors.verticalCenter: parent.verticalCenter
    anchors.left: parent.left
    anchors.top: parent.top

ItemCounterWindow < MainWindow
  !text: tr('Items Counter')
  size: 450 500
  @onEscape: self:hide()

  VerticalScrollBar
    id: contentScroll
    anchors.top: parent.top
    margin-top: 3
    anchors.right: parent.right
    anchors.bottom: parent.top
    step: 28
    pixels-scroll: true
    margin-top: 5
    margin-bottom: 5

  ScrollablePanel
    id: content
    anchors.top: prev.top
    anchors.left: parent.left
    anchors.right: parent.right
    anchors.bottom: separator.top
    vertical-scrollbar: contentScroll
    margin-bottom: 10

    Panel
      id: panel1
      anchors.top: parent.top
      anchors.left: parent.left
      anchors.right: parent.right
      margin-top: 5
      layout:
        type: verticalBox
        fit-children: true

    Panel
      id: panel2
      anchors.top: parent.top
      anchors.left: parent.left
      anchors.right: parent.right
      margin-top: 5
      margin-left:100
      layout:
        type: verticalBox
        fit-children: true

    Panel
      id: panel3
      anchors.top: parent.top
      anchors.left: parent.left
      anchors.right: parent.right
      margin-top: 5
      margin-left:200
      layout:
        type: verticalBox
        fit-children: true

    Panel
      id: panel4
      anchors.top: parent.top
      anchors.left: parent.left
      anchors.right: parent.right
      margin-top: 5
      margin-left:300
      layout:
        type: verticalBox
        fit-children: true

  HorizontalSeparator
    id: separator
    anchors.right: parent.right
    anchors.left: parent.left
    anchors.bottom: closeButton.top
    margin-bottom: 8    

  Button
    id: closeButton
    !text: tr('Close')
    font: cipsoftFont
    anchors.right: parent.right
    anchors.bottom: parent.bottom
]])

local rootWidget = g_ui.getRootWidget()
local itemList = nil
if rootWidget then
    ItemCounterWindow = UI.createWindow('ItemCounterWindow', rootWidget)

    ItemCounterWindow:hide()

    ItemCounterWindow.onGeometryChange = function(widget, old, new)
        if old.height == 0 then return end
        config.height = new.height
    end

    addButton("","Item Counter", function()
      ItemCounterWindow:show()
      ItemCounterWindow:raise()
      ItemCounterWindow:focus()
    end):setColor("#03fcf4")
    
    local firstPage = 100
    local lastPage = 50000
    local pageSize = 50
    local currentPage = firstPage

    ItemCounterWindow.closeButton.onClick = function(widget)
        ItemCounterWindow:hide()
    end

end

local containerItemStack = {}
local result = {}

local printMessage = function(mens)
  modules.game_textmessage.displayGameMessage(mens)
end

local addItemCount = function(id, title, defaultItem, dest)
  local widget = UI.createWidget('ItemCounterItem', dest)
  widget:setId(id.."ÃÂ¯temId")
  widget.text:setText(title)
  widget.item:setItemId(defaultItem)
end

local dests = {
  ItemCounterWindow.content.panel1,
  ItemCounterWindow.content.panel2,
  ItemCounterWindow.content.panel3,
  ItemCounterWindow.content.panel4,
}

local destIndex = 0

local getDest = function()
  destIndex = destIndex + 1

  if destIndex > 4 then
    destIndex = 1
  end
  
  return  dests[destIndex]
end

local closeAll = function()
  for _, container in pairs(getContainers()) do
    g_game.close(container)
  end
end

local openBack = function()
  if getBack() then 
    g_game.open(getBack()) 
  end
end

local getMainBPId = function()
  return getBack():getId()
end

local isBackOpen = function()
  for _, container in pairs(getContainers()) do
    local cItem = container:getContainerItem()
    if cItem:getId() == getMainBPId() then
      return true
    end
  end
  return false
end

local isBack = function(container)
  return container:getContainerItem():getId() == getMainBPId()
end

local pushContainer = function(containerItem)
   table.insert(containerItemStack, containerItem)
end

local popContainer = function()
   table.remove(containerItemStack, 1)
end

local openNext = function()
  local cItem = containerItemStack[1]
  if cItem then
    popContainer()
    g_game.open(cItem)
    schedule(250, function()
      cItem.isChecked = true
    end)
    return true
  else
    return false
  end
end

local closeCheckedContainers = function()
  for _, container in pairs(getContainers()) do
    if not isBack(container) then
      local canClose = true
      for __, item in ipairs(container:getItems()) do
        if item:isContainer() and not item.isChecked then
          canClose = false
        end
      end
      if canClose then
        g_game.close(container)
      end
    end
  end
end

local addContainersToStack = function()
  for _, container in pairs(getContainers()) do
      for __, item in ipairs(container:getItems()) do
        if item:isContainer() and not item.isAdded then
          item.isAdded = true
          pushContainer(item)
        end
      end   
  end
end

local allChecked = function()
  for _, container in pairs(getContainers()) do
    if not isBack(container) then
      for __, item in ipairs(container:getItems()) do
        if item:isContainer() and not item.isChecked then
          return false
        end
      end
    end
  end
  return true
end

local finished = function() 
  return #containerItemStack == 0 and allChecked()
end

local addResult = function(container)
  for __, item in ipairs(container:getItems()) do
    local itemId = item:getId()
    if not result[itemId] then
      result[itemId] = item:getCount()
    else
      result[itemId] = result[itemId] + item:getCount()
    end
  end
end

local setResult = function()
  local tkeys = {}

  for k in pairs(result) 
    do table.insert(tkeys, k) 
  end

  table.sort(tkeys)
  
  for _,id in pairs(tkeys) do
    local count = result[id]
    addItemCount(id, count, id, getDest())
  end
end

local showResult = function()
  schedule(1000, function()
    ItemCounterWindow:show()
    ItemCounterWindow:raise()
    ItemCounterWindow:focus()
  end)
end

local clearResult = function()
  result = {}
  ItemCounterWindow:hide()
  for i=1, 4 do
    getDest():destroyChildren()
  end
end

local _delay = 1000
local fDelay = _delay + (g_game.getPing() or 250)
local resetContainers = false
local m_main = macro(fDelay, "Check Containers Items", function(m)
  if not resetContainers then
    clearResult()
    resetContainers = true
    closeAll()
    return openBack()
  end

  closeCheckedContainers()
  addContainersToStack()
  
  if openNext() then return end

  if finished() then
    closeAll()
    setResult()
    printMessage("Finished Counting!")
    showResult()
    resetContainers = false
    destIndex = 0
    m.setOff()
  end
end)

onContainerOpen(function(container, previousContainer)
  if m_main.isOn() and container then
    container.window:setHeight(55)
    addResult(container)
  end
end)

addButton("", "+ Free Scripts", function()
  g_platform.openUrl("https://discord.com/invite/K2C9ZFBjVA")
end)
autopt = addIcon("autopt", {item =8737, text = "Party"},
macro(1000,function() 
  if player:getShield() > 2 then return end -- already in a party
  for s, spec in pairs(getSpectators(false)) do
    if spec:getShield() == 1 then
      g_game.partyJoin(spec:getId())
      delay(1000)
    end
  end
end))
autopt:breakAnchors()
autopt:move(165,10)
onPlayerPositionChange(function(pos) if storage.limitFloor then local gameMapPanel = modules.game_interface.getMapPanel() if gameMapPanel then gameMapPanel:lockVisibleFloor(pos.z) end end end) local switch = addSwitch("limit Floor", "No Muestra Los Techos", function(widget) widget:setOn(not widget:isOn()) storage.limitFloor = widget:isOn() local gameMapPanel = modules.game_interface.getMapPanel() if gameMapPanel then if storage.limitFloor then gameMapPanel:lockVisibleFloor(posz()) else gameMapPanel:unlockVisibleFloor() end end end) switch:setOn(storage.limitFloor)
local rainbowOutfitTime = 1

rainbowOutfit = macro(rainbowOutfitTime, "Rainbow Outfit", function ()
  rainbowOutfit()
end)

function rainbowOutfit()
    local randomColor = math.random(1,132)
    local pOutfit = player:getOutfit()
    local rainbowOutfit = { type = pOutfit.type, head = math.random(1,132), body = math.random(1,132), legs = math.random(1,132), feet = math.random(1,132), addons = pOutfit.addons}
    setOutfit(rainbowOutfit)
  return true
end
local settings = storage.PushMaxIcons

local fireFieldId = 3172
local delayPush = 800
local iconsData = table.empty(settings) and {
    {imgId = 8647, name="NWEST", hotkey = "7", x= -1, y=-1, initialPosX = 120, initialPosY = 220},
    {imgId = 8650, name="NORTH", hotkey = "8", x= 0, y=-1, initialPosX = 170, initialPosY = 220},
    {imgId = 8647, name="NEAST", hotkey = "9", x= 1, y=-1, initialPosX = 220, initialPosY = 220},
    {imgId = 8650, name="EAST", hotkey = "6", x= 1, y=0, initialPosX = 220, initialPosY = 275},
    {imgId = 8650, name="WEST", hotkey = "4", x= -1, y=0, initialPosX = 120, initialPosY = 275},
    {imgId = 8647, name="SWEST", hotkey = "1", x= -1, y=1, initialPosX = 120, initialPosY = 330},
    {imgId = 8650, name="SUR", hotkey = "2", x= 0, y=1, initialPosX = 170, initialPosY = 330},
    {imgId = 8647, name="SEAST", hotkey = "3", x= 1, y=1, initialPosX = 220, initialPosY = 330}
} or settings


local iconos = {}

for _, data in ipairs(iconsData) do
    local icon
    icon = addIcon(_.."icons", {item={id=data.imgId, count=1}, text=data.name, hotkey = data.hotkey}, macro(delayPush, function(m)
       m.icon = m.icon or icon
       if m:isOn() then
        for _, iconT in ipairs(iconos) do
          if iconT ~= m.icon and iconT.status:isOn() then
           iconT:onClick()
           break
          end
        end
       end
        local target = g_game.getAttackingCreature()
        if not target then 
            target = g_game.getFollowingCreature()
        end
        if not target then return end
        local targetPos = target:getPosition()
        local pushTo = {x = targetPos.x + data.x, y = targetPos.y + data.y, z = targetPos.z}
        local pushToTile = g_map.getTile(pushTo)
        if not pushToTile or #pushToTile:getCreatures() > 0 or not pushToTile:isWalkable() then
            return
        end
        local targetTile = g_map.getTile(targetPos)
        if targetTile:getTopUseThing():isPickupable() or not targetTile:getTopUseThing():isNotMoveable() then
            useWith(fireFieldId, target)
        end
        g_game.move(target, pushTo)
    end))
    icon:breakAnchors()  -- Removes current positional restraints
    icon:move(data.initialPosX, data.initialPosY)   -- Moves the icon to its initial position

    icon.onDragEnter = function(widget, mousePos)
        if not g_keyboard.isKeyPressed('f1') then
          return false
        end
        widget:breakAnchors()
        widget.movingReference = { x = mousePos.x - widget:getX(), y = mousePos.y - widget:getY() }
        return true
    end

    -- Integrating movable functionality
    local dobleclick = false
    icon.onDoubleClick = function()
        dobleclick = true
        schedule(1500, function()
            dobleclick = false
        end)
    end

    icon.onDragMove = function(widget, mousePos, moved)
        if not dobleclick and not g_keyboard.isKeyPressed("F1") then
            return false
        end
        local parentRect = widget:getParent():getRect()
        local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
        local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
        widget:move(x, y)
        icon.moving = { x = x, y = y }
        return true
    end

    icon.onDragLeave = function(widget, pos)
        data.initialPosX = icon:getX()
        data.initialPosY = icon:getY()
        storage.PushMaxIcons = iconsData
    end
    table.insert(iconos, icon)
end




hidepush = addIcon("hidepush", {item=8153, text="Hide PUSH", movable=true}, function(icon, isOn)
 for _, icon in ipairs(iconos) do
   icon:setVisible(isOn)
 end
end)
hidepush:breakAnchors()
hidepush:move(500,380)
local exfrigoMacro = macro(100, function()
    if g_game.isAttacking() then
        say("exori frigo")
    end
end)

local function activeDrag(icon, nameMacro, position)
  icon:breakAnchors()
  icon:move(position.posX or 20, position.posY or 20)

  local dobleclick = false
  icon.onDoubleClick = function()
    dobleclick = true
    schedule(1500, function()
      dobleclick = false
    end)
  end

  icon.onDragEnter = function(widget, mousePos)
    if not dobleclick and not g_keyboard.isKeyPressed("F1") then
      return false
    end
    icon:breakAnchors()
    icon.movingReference = { x = mousePos.x - icon:getX(), y = mousePos.y - icon:getY() }
    dobleclick = false
    return true
  end

  icon.onDragMove = function(widget, mousePos, moved)
    local parentRect = widget:getParent():getRect()
    local x = math.min(math.max(parentRect.x, mousePos.x - widget.movingReference.x), parentRect.x + parentRect.width - widget:getWidth())
    local y = math.min(math.max(parentRect.y - widget:getParent():getMarginTop(), mousePos.y - widget.movingReference.y), parentRect.y + parentRect.height - widget:getHeight())
    widget:move(x, y)
    icon.moving = { x = icon:getX(), y = icon:getY() }
    return true
  end

  icon.onDragLeave = function(widget, pos)
    storage[nameMacro] = { posX = icon.moving.x, posY = icon.moving.y }
  end
end

local exfrigoIcon = addIcon("Exfrigo", {item = 5533, text = "Exfrigo", switchable = true, moveable = true}, function(icon, isOn)
  exfrigoMacro.setOn(isOn)
end)

activeDrag(exfrigoIcon, 'exfrigo', storage.exfrigo or {})

-- agrega las ciudades aqui
local cities = {
  'Thais',
  'Venore',
  'Edron',
  'Carlin',
  'Yalahar',
  'Fenrock',
  'Darashia',
  'Farmine',
  'Roshamuul',
  'Port hope',
  'Liberty bay',
  'Goroma',
  'Svargrond',
  'Ankrahmun',
  'Dusty Dunes',
  'Deathbone Island',
  "Ab'Dendriel",
  'Travel',
  'Cormaya'
}

-- agrega nombre de npc aqui
local npcs = {
  "[Boat] Captain Bluebear",
  "[Boat] Captain Breezelda",
  "[Boat] Captain Crunch",
  "[Boat] Captain Fearless",
  "[Boat] Captain Seahorse",
  "[Boat] Captain Seagull",
  "[Boat] Captain Sinbeard",
  "[Boat] Captain Greyhound",
  "[Boat] Captain Meshif",
  "[Boat] Jack Fate",
  "[Boat] Karith",
  "[Boat] Petros",
  "[Boat] Pemaret",
  "[Boat] Charles",
  "[Carpet] Chemar",
  "[Carpet] Melian",
  "Captain Chelop"
}


-- no editar nada de abajo
travelUI = setupUI([[
UIWindow
  !text: tr('Viajar')
  color: #99d6ff
  font: sans-bold-16px
  size: 100 100
  background-color: black
  opacity: 0.85
  anchors.left: parent.left
  anchors.top: parent.top
  margin-left: 600
  margin-top: 150

  ComboBox
    id: travelOptions
    anchors.horizontalCenter: parent.horizontalCenter
    anchors.top: parent.top
    text-align: center
    opacity: 1.0
    color: yellow
    font: sans-bold-16px
    margin-top: 25

    @onSetup: |
      self:addOption("None")

  Button
    id: closeButton
    text: X
    anchors.right: parent.right
    anchors.bottom: parent.bottom
    color: #99d6ff
    size: 15 15
    margin-bottom: 10
    margin-right: 10



]], g_ui.getRootWidget());
travelUI:hide();

for _, city in ipairs(cities) do
  travelUI.travelOptions:addOption(city)
end

NPC.talk = function(text)
  if g_game.getClientVersion() >= 860 then
      g_game.talkChannel(11, 0, text)
  else
      return say(text)
  end
end

macro(100,function()
  local findNpc
  for index, npcName in ipairs(npcs) do
    findNpc = getCreatureByName(npcName)
    if findNpc then break end
  end

  if findNpc and getDistanceBetween(pos(), findNpc:getPosition()) <= 3 then
      travelUI:show();
  else
      travelUI:hide();
  end
end)

travelUI.travelOptions.onOptionChange = function(widget, option, data)
  say('hi')
  schedule(100, function()
      NPC.talk(option)
  end)
  schedule(500, function()
      NPC.talk('yes')
  end)
  schedule(1000, function()
      NPC.talk('yes')
  end)
end

-- Underbot color
function setRainbowColor(time)
  local r = math.floor(127 * math.sin(time) + 128)
  local g = math.floor(127 * math.sin(time + 2 * math.pi / 3) + 128)
  local b = math.floor(127 * math.sin(time + 4 * math.pi / 3) + 128)
  return string.format("#%02X%02X%02X", r, g, b)
end

local ui = setupUI([[
Panel
  height: 120
  width: 100
  anchors.left: parent.left
  anchors.top: parent.top
  margin-left: 3

  Label
    id: label1
    margin-top: 50
    font: verdana-11px-rounded
    anchors.top: parent.top
    anchors.left: parent.left
    width: 240     
]], modules.game_interface.getMapPanel())

macro(10, function()
  local time = os.clock() * 4
  local color1 = setRainbowColor(time)
  local color2 = setRainbowColor(time + 1)
  local color3 = setRainbowColor(time + 2)
  local color4 = setRainbowColor(time + 3)

  -- Cambia el color de la etiqueta utilizando el efecto arcoÃ­ris
  ui.label1:setColoredText({" TE AMO ", color1, " MI CHAPARRITA ", color2, " HERMOSA ", color3})
end)

-- Mueve el panel de UI a la posiciÃ³n deseada
ui:breakAnchors() -- Rompe las restricciones de posicion actuales del panel
ui:move(380,30) -- Mueve el panel a la posiciÃ³n (300, 30)
